{"ast":null,"code":"export default {\n  name: 'Navs'\n};","map":{"version":3,"names":["name"],"sources":["C:\\Pratibha\\Ticket-Management-Frontend\\Ticket-Management-Frontend\\src\\views\\base\\Navs.vue"],"sourcesContent":["<template>\n  <CRow>\n    <CCol :xs=\"12\">\n      <CCard class=\"mb-4\">\n        <CCardHeader>\n          <strong>Vue Navs</strong> <small>Base navs</small>\n        </CCardHeader>\n        <CCardBody>\n          <p class=\"text-medium-emphasis small\">\n            The base <code>.nav</code> component is built with flexbox and\n            provide a strong foundation for building all types of navigation\n            components. It includes some style overrides (for working with\n            lists), some link padding for larger hit areas, and basic disabled\n            styling.\n          </p>\n          <DocsExample href=\"components/nav.html#base-nav\">\n            <CNav>\n              <CNavItem>\n                <CNavLink href=\"#\" active> Active </CNavLink>\n              </CNavItem>\n              <CNavItem>\n                <CNavLink href=\"#\">Link</CNavLink>\n              </CNavItem>\n              <CNavItem>\n                <CNavLink href=\"#\">Link</CNavLink>\n              </CNavItem>\n              <CNavItem>\n                <CNavLink href=\"#\" disabled> Disabled </CNavLink>\n              </CNavItem>\n            </CNav>\n          </DocsExample>\n          <p class=\"text-medium-emphasis small\">\n            Classes are used throughout, so your markup can be super flexible.\n            Use <code>&lt;ul&gt;</code>s like above, <code>&lt;ol&gt;</code> if\n            the order of your items is important, or roll your own with a\n            <code>&lt;nav&gt;</code> element. Because the .nav uses display:\n            flex, the nav links behave the same as nav items would, but without\n            the extra markup.\n          </p>\n          <DocsExample href=\"components/nav.html#base-nav\">\n            <CNav component=\"nav\">\n              <CNavLink href=\"#\" active> Active </CNavLink>\n              <CNavLink href=\"#\">Link</CNavLink>\n              <CNavLink href=\"#\">Link</CNavLink>\n              <CNavLink href=\"#\" disabled> Disabled </CNavLink>\n            </CNav>\n          </DocsExample>\n        </CCardBody>\n      </CCard>\n    </CCol>\n    <CCol :xs=\"12\">\n      <CCard class=\"mb-4\">\n        <CCardHeader>\n          <strong>Vue Navs</strong> <small>Horizontal alignment</small>\n        </CCardHeader>\n        <CCardBody>\n          <p class=\"text-medium-emphasis small\">\n            Change the horizontal alignment of your nav with\n            <a href=\"https://coreui.io/docs/layout/grid/#horizontal-alignment\">\n              flexbox utilities\n            </a>\n            . By default, navs are left-aligned, but you can easily change them\n            to center or right aligned.\n          </p>\n          <p class=\"text-medium-emphasis small\">\n            Centered with <code>.justify-content-center</code>:\n          </p>\n          <DocsExample href=\"components/nav.html#horizontal-alignment\">\n            <CNav class=\"justify-content-center\">\n              <CNavItem>\n                <CNavLink href=\"#\" active> Active </CNavLink>\n              </CNavItem>\n              <CNavItem>\n                <CNavLink href=\"#\">Link</CNavLink>\n              </CNavItem>\n              <CNavItem>\n                <CNavLink href=\"#\">Link</CNavLink>\n              </CNavItem>\n              <CNavItem>\n                <CNavLink href=\"#\" disabled> Disabled </CNavLink>\n              </CNavItem>\n            </CNav>\n          </DocsExample>\n          <p class=\"text-medium-emphasis small\">\n            Right-aligned with <code>.justify-content-end</code>:\n          </p>\n          <DocsExample href=\"components/nav.html#base-nav\">\n            <CNav class=\"justify-content-end\">\n              <CNavItem>\n                <CNavLink href=\"#\" active> Active </CNavLink>\n              </CNavItem>\n              <CNavItem>\n                <CNavLink href=\"#\">Link</CNavLink>\n              </CNavItem>\n              <CNavItem>\n                <CNavLink href=\"#\">Link</CNavLink>\n              </CNavItem>\n              <CNavItem>\n                <CNavLink href=\"#\" disabled> Disabled </CNavLink>\n              </CNavItem>\n            </CNav>\n          </DocsExample>\n        </CCardBody>\n      </CCard>\n    </CCol>\n    <CCol :xs=\"12\">\n      <CCard class=\"mb-4\">\n        <CCardHeader>\n          <strong>Vue Navs</strong> <small>Vertical</small>\n        </CCardHeader>\n        <CCardBody>\n          <p class=\"text-medium-emphasis small\">\n            Stack your navigation by changing the flex item direction with the{'\n            '}\n            <code>.flex-column</code> utility. Need to stack them on some\n            viewports but not others? Use the responsive versions (e.g.,\n            <code>.flex-sm-column</code>).\n          </p>\n          <DocsExample href=\"components/nav.html#vertical\">\n            <CNav class=\"flex-column\">\n              <CNavItem>\n                <CNavLink href=\"#\" active> Active </CNavLink>\n              </CNavItem>\n              <CNavItem>\n                <CNavLink href=\"#\">Link</CNavLink>\n              </CNavItem>\n              <CNavItem>\n                <CNavLink href=\"#\">Link</CNavLink>\n              </CNavItem>\n              <CNavItem>\n                <CNavLink href=\"#\" disabled> Disabled </CNavLink>\n              </CNavItem>\n            </CNav>\n          </DocsExample>\n        </CCardBody>\n      </CCard>\n    </CCol>\n    <CCol :xs=\"12\">\n      <CCard class=\"mb-4\">\n        <CCardHeader>\n          <strong>Vue Navs</strong> <small>Tabs</small>\n        </CCardHeader>\n        <CCardBody>\n          <p class=\"text-medium-emphasis small\">\n            Takes the basic nav from above and adds the\n            <code>variant=&#34;tabs&#34;</code> class to generate a tabbed\n            interface\n          </p>\n          <DocsExample href=\"components/nav.html#tabs\">\n            <CNav variant=\"tabs\">\n              <CNavItem>\n                <CNavLink href=\"#\" active> Active </CNavLink>\n              </CNavItem>\n              <CNavItem>\n                <CNavLink href=\"#\">Link</CNavLink>\n              </CNavItem>\n              <CNavItem>\n                <CNavLink href=\"#\">Link</CNavLink>\n              </CNavItem>\n              <CNavItem>\n                <CNavLink href=\"#\" disabled> Disabled </CNavLink>\n              </CNavItem>\n            </CNav>\n          </DocsExample>\n        </CCardBody>\n      </CCard>\n    </CCol>\n    <CCol :xs=\"12\">\n      <CCard class=\"mb-4\">\n        <CCardHeader>\n          <strong>Vue Navs</strong> <small>Pills</small>\n        </CCardHeader>\n        <CCardBody>\n          <p class=\"text-medium-emphasis small\">\n            Take that same HTML, but use\n            <code>variant=&#34;pills&#34;</code> instead:\n          </p>\n          <DocsExample href=\"components/nav.html#pills\">\n            <CNav variant=\"pills\">\n              <CNavItem>\n                <CNavLink href=\"#\" active> Active </CNavLink>\n              </CNavItem>\n              <CNavItem>\n                <CNavLink href=\"#\">Link</CNavLink>\n              </CNavItem>\n              <CNavItem>\n                <CNavLink href=\"#\">Link</CNavLink>\n              </CNavItem>\n              <CNavItem>\n                <CNavLink href=\"#\" disabled> Disabled </CNavLink>\n              </CNavItem>\n            </CNav>\n          </DocsExample>\n        </CCardBody>\n      </CCard>\n    </CCol>\n    <CCol :xs=\"12\">\n      <CCard class=\"mb-4\">\n        <CCardHeader>\n          <strong>Vue Navs</strong> <small>Fill and justify</small>\n        </CCardHeader>\n        <CCardBody>\n          <p class=\"text-medium-emphasis small\">\n            Force your <code>.nav</code>&#39;s contents to extend the full\n            available width one of two modifier classes. To proportionately fill\n            all available space with your <code>.nav-item</code>s, use\n            <code>layout=&#34;fill&#34;</code>. Notice that all horizontal space\n            is occupied, but not every nav item has the same width.\n          </p>\n          <DocsExample href=\"components/nav.html#fill-and-justify\">\n            <CNav variant=\"pills\" layout=\"fill\">\n              <CNavItem>\n                <CNavLink href=\"#\" active> Active </CNavLink>\n              </CNavItem>\n              <CNavItem>\n                <CNavLink href=\"#\">Link</CNavLink>\n              </CNavItem>\n              <CNavItem>\n                <CNavLink href=\"#\">Link</CNavLink>\n              </CNavItem>\n              <CNavItem>\n                <CNavLink href=\"#\" disabled> Disabled </CNavLink>\n              </CNavItem>\n            </CNav>\n          </DocsExample>\n          <p class=\"text-medium-emphasis small\">\n            For equal-width elements, use\n            <code>layout=&#34;justified&#34;</code>. All horizontal space will\n            be occupied by nav links, but unlike the .nav-fill above, every nav\n            item will be the same width.\n          </p>\n          <DocsExample href=\"components/nav.html#fill-and-justify\">\n            <CNav variant=\"pills\" layout=\"justified\">\n              <CNavItem>\n                <CNavLink href=\"#\" active> Active </CNavLink>\n              </CNavItem>\n              <CNavItem>\n                <CNavLink href=\"#\">Link</CNavLink>\n              </CNavItem>\n              <CNavItem>\n                <CNavLink href=\"#\">Link</CNavLink>\n              </CNavItem>\n              <CNavItem>\n                <CNavLink href=\"#\" disabled> Disabled </CNavLink>\n              </CNavItem>\n            </CNav>\n          </DocsExample>\n        </CCardBody>\n      </CCard>\n    </CCol>\n    <CCol :xs=\"12\">\n      <CCard class=\"mb-4\">\n        <CCardHeader>\n          <strong>Vue Navs</strong> <small>Working with flex utilities</small>\n        </CCardHeader>\n        <CCardBody>\n          <p class=\"text-medium-emphasis small\">\n            If you need responsive nav variations, consider using a series of{'\n            '}\n            <a href=\"https://coreui.io/docs/utilities/flex\">flexbox utilities</a\n            >. While more verbose, these utilities offer greater customization\n            across responsive breakpoints. In the example below, our nav will be\n            stacked on the lowest breakpoint, then adapt to a horizontal layout\n            that fills the available width starting from the small breakpoint.\n          </p>\n          <DocsExample href=\"components/nav.html#working-with-flex-utilities\">\n            <CNav\n              component=\"nav\"\n              variant=\"pills\"\n              class=\"flex-column flex-sm-row\"\n            >\n              <CNavLink href=\"#\" active> Active </CNavLink>\n              <CNavLink href=\"#\">Link</CNavLink>\n              <CNavLink href=\"#\">Link</CNavLink>\n              <CNavLink href=\"#\" disabled> Disabled </CNavLink>\n            </CNav>\n          </DocsExample>\n        </CCardBody>\n      </CCard>\n    </CCol>\n    <CCol :xs=\"12\">\n      <CCard class=\"mb-4\">\n        <CCardHeader>\n          <strong>Vue Navs</strong> <small>Tabs with dropdowns</small>\n        </CCardHeader>\n        <CCardBody>\n          <DocsExample href=\"components/nav.html#tabs-with-dropdowns\">\n            <CNav>\n              <CNavItem>\n                <CNavLink href=\"#\" active> Active </CNavLink>\n              </CNavItem>\n              <CDropdown variant=\"nav-item\">\n                <CDropdownToggle color=\"secondary\"\n                  >Dropdown button</CDropdownToggle\n                >\n                <CDropdownMenu>\n                  <CDropdownItem href=\"#\">Action</CDropdownItem>\n                  <CDropdownItem href=\"#\">Another action</CDropdownItem>\n                  <CDropdownItem href=\"#\">Something else here</CDropdownItem>\n                </CDropdownMenu>\n              </CDropdown>\n              <CNavItem>\n                <CNavLink href=\"#\">Link</CNavLink>\n              </CNavItem>\n              <CNavItem>\n                <CNavLink href=\"#\" disabled> Disabled </CNavLink>\n              </CNavItem>\n            </CNav>\n          </DocsExample>\n        </CCardBody>\n      </CCard>\n    </CCol>\n    <CCol :xs=\"12\">\n      <CCard class=\"mb-4\">\n        <CCardHeader>\n          <strong>Vue Navs</strong> <small>Pills with dropdowns</small>\n        </CCardHeader>\n        <CCardBody>\n          <DocsExample href=\"components/nav.html#pills-with-dropdowns\">\n            <CNav variant=\"pills\">\n              <CNavItem>\n                <CNavLink href=\"#\" active> Active </CNavLink>\n              </CNavItem>\n              <CDropdown variant=\"nav-item\">\n                <CDropdownToggle color=\"secondary\"\n                  >Dropdown button</CDropdownToggle\n                >\n                <CDropdownMenu>\n                  <CDropdownItem href=\"#\">Action</CDropdownItem>\n                  <CDropdownItem href=\"#\">Another action</CDropdownItem>\n                  <CDropdownItem href=\"#\">Something else here</CDropdownItem>\n                </CDropdownMenu>\n              </CDropdown>\n              <CNavItem>\n                <CNavLink href=\"#\">Link</CNavLink>\n              </CNavItem>\n              <CNavItem>\n                <CNavLink href=\"#\" disabled> Disabled </CNavLink>\n              </CNavItem>\n            </CNav>\n          </DocsExample>\n        </CCardBody>\n      </CCard>\n    </CCol>\n  </CRow>\n</template>\n\n<script>\nexport default {\n  name: 'Navs',\n}\n</script>\n"],"mappings":"AA4VA,eAAe;EACbA,IAAI,EAAE;AACR"},"metadata":{},"sourceType":"module","externalDependencies":[]}