{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"strong\", null, \"Vue Accordion\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"text-medium-emphasis small\"\n}, \" Click the accordions below to expand/collapse the accordion content. \", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"strong\", null, \"This is the first item's accordion body.\", -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"code\", null, \".accordion-body\", -1 /* HOISTED */);\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"strong\", null, \"This is the second item's accordion body.\", -1 /* HOISTED */);\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"code\", null, \".accordion-body\", -1 /* HOISTED */);\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"strong\", null, \"This is the third item's accordion body.\", -1 /* HOISTED */);\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"code\", null, \".accordion-body\", -1 /* HOISTED */);\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"strong\", null, \"Vue Accordion\", -1 /* HOISTED */);\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"small\", null, \"Flush\", -1 /* HOISTED */);\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"text-medium-emphasis small\"\n}, [/*#__PURE__*/_createTextVNode(\" Add \"), /*#__PURE__*/_createElementVNode(\"code\", null, \"flush\"), /*#__PURE__*/_createTextVNode(\" to remove the default \"), /*#__PURE__*/_createElementVNode(\"code\", null, \"background-color\"), /*#__PURE__*/_createTextVNode(\", some borders, and some rounded corners to render accordions edge-to-edge with their parent container. \")], -1 /* HOISTED */);\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"strong\", null, \"This is the first item's accordion body.\", -1 /* HOISTED */);\nconst _hoisted_13 = /*#__PURE__*/_createElementVNode(\"code\", null, \".accordion-body\", -1 /* HOISTED */);\nconst _hoisted_14 = /*#__PURE__*/_createElementVNode(\"strong\", null, \"This is the second item's accordion body.\", -1 /* HOISTED */);\nconst _hoisted_15 = /*#__PURE__*/_createElementVNode(\"code\", null, \".accordion-body\", -1 /* HOISTED */);\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"strong\", null, \"This is the third item's accordion body.\", -1 /* HOISTED */);\nconst _hoisted_17 = /*#__PURE__*/_createElementVNode(\"code\", null, \".accordion-body\", -1 /* HOISTED */);\nconst _hoisted_18 = /*#__PURE__*/_createElementVNode(\"strong\", null, \"Vue Accordion\", -1 /* HOISTED */);\nconst _hoisted_19 = /*#__PURE__*/_createElementVNode(\"small\", null, \"Always open\", -1 /* HOISTED */);\nconst _hoisted_20 = /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"text-medium-emphasis small\"\n}, [/*#__PURE__*/_createTextVNode(\" Add \"), /*#__PURE__*/_createElementVNode(\"code\", null, \"always-open\"), /*#__PURE__*/_createTextVNode(\" property to make accordion items stay open when another item is opened. \")], -1 /* HOISTED */);\nconst _hoisted_21 = /*#__PURE__*/_createElementVNode(\"strong\", null, \"This is the first item's accordion body.\", -1 /* HOISTED */);\nconst _hoisted_22 = /*#__PURE__*/_createElementVNode(\"code\", null, \".accordion-body\", -1 /* HOISTED */);\nconst _hoisted_23 = /*#__PURE__*/_createElementVNode(\"strong\", null, \"This is the second item's accordion body.\", -1 /* HOISTED */);\nconst _hoisted_24 = /*#__PURE__*/_createElementVNode(\"code\", null, \".accordion-body\", -1 /* HOISTED */);\nconst _hoisted_25 = /*#__PURE__*/_createElementVNode(\"strong\", null, \"This is the third item's accordion body.\", -1 /* HOISTED */);\nconst _hoisted_26 = /*#__PURE__*/_createElementVNode(\"code\", null, \".accordion-body\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_CCardHeader = _resolveComponent(\"CCardHeader\");\n  const _component_CAccordionHeader = _resolveComponent(\"CAccordionHeader\");\n  const _component_CAccordionBody = _resolveComponent(\"CAccordionBody\");\n  const _component_CAccordionItem = _resolveComponent(\"CAccordionItem\");\n  const _component_CAccordion = _resolveComponent(\"CAccordion\");\n  const _component_DocsExample = _resolveComponent(\"DocsExample\");\n  const _component_CCardBody = _resolveComponent(\"CCardBody\");\n  const _component_CCard = _resolveComponent(\"CCard\");\n  const _component_CCol = _resolveComponent(\"CCol\");\n  const _component_CRow = _resolveComponent(\"CRow\");\n  return _openBlock(), _createBlock(_component_CRow, null, {\n    default: _withCtx(() => [_createVNode(_component_CCol, {\n      xs: 12\n    }, {\n      default: _withCtx(() => [_createVNode(_component_CCard, {\n        class: \"mb-4\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_CCardHeader, null, {\n          default: _withCtx(() => [_hoisted_1]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_CCardBody, null, {\n          default: _withCtx(() => [_hoisted_2, _createVNode(_component_DocsExample, {\n            href: \"components/accordion.html\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_CAccordion, null, {\n              default: _withCtx(() => [_createVNode(_component_CAccordionItem, {\n                \"item-key\": 1\n              }, {\n                default: _withCtx(() => [_createVNode(_component_CAccordionHeader, null, {\n                  default: _withCtx(() => [_createTextVNode(\" Accordion Item #1 \")]),\n                  _: 1 /* STABLE */\n                }), _createVNode(_component_CAccordionBody, null, {\n                  default: _withCtx(() => [_hoisted_3, _createTextVNode(\" It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \"), _hoisted_4, _createTextVNode(\", though the transition does limit overflow. \")]),\n                  _: 1 /* STABLE */\n                })]),\n\n                _: 1 /* STABLE */\n              }), _createVNode(_component_CAccordionItem, {\n                \"item-key\": 2\n              }, {\n                default: _withCtx(() => [_createVNode(_component_CAccordionHeader, null, {\n                  default: _withCtx(() => [_createTextVNode(\" Accordion Item #2 \")]),\n                  _: 1 /* STABLE */\n                }), _createVNode(_component_CAccordionBody, null, {\n                  default: _withCtx(() => [_hoisted_5, _createTextVNode(\" It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \"), _hoisted_6, _createTextVNode(\", though the transition does limit overflow. \")]),\n                  _: 1 /* STABLE */\n                })]),\n\n                _: 1 /* STABLE */\n              }), _createVNode(_component_CAccordionItem, {\n                \"item-key\": 3\n              }, {\n                default: _withCtx(() => [_createVNode(_component_CAccordionHeader, null, {\n                  default: _withCtx(() => [_createTextVNode(\" Accordion Item #3 \")]),\n                  _: 1 /* STABLE */\n                }), _createVNode(_component_CAccordionBody, null, {\n                  default: _withCtx(() => [_hoisted_7, _createTextVNode(\" It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \"), _hoisted_8, _createTextVNode(\", though the transition does limit overflow. \")]),\n                  _: 1 /* STABLE */\n                })]),\n\n                _: 1 /* STABLE */\n              })]),\n\n              _: 1 /* STABLE */\n            })]),\n\n            _: 1 /* STABLE */\n          })]),\n\n          _: 1 /* STABLE */\n        })]),\n\n        _: 1 /* STABLE */\n      }), _createVNode(_component_CCard, {\n        class: \"mb-4\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_CCardHeader, null, {\n          default: _withCtx(() => [_hoisted_9, _createTextVNode(), _hoisted_10]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_CCardBody, null, {\n          default: _withCtx(() => [_hoisted_11, _createVNode(_component_DocsExample, {\n            href: \"components/accordion.html#flush\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_CAccordion, {\n              flush: \"\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_CAccordionItem, null, {\n                default: _withCtx(() => [_createVNode(_component_CAccordionHeader, null, {\n                  default: _withCtx(() => [_createTextVNode(\" Accordion Item #1 \")]),\n                  _: 1 /* STABLE */\n                }), _createVNode(_component_CAccordionBody, null, {\n                  default: _withCtx(() => [_hoisted_12, _createTextVNode(\" It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \"), _hoisted_13, _createTextVNode(\", though the transition does limit overflow. \")]),\n                  _: 1 /* STABLE */\n                })]),\n\n                _: 1 /* STABLE */\n              }), _createVNode(_component_CAccordionItem, null, {\n                default: _withCtx(() => [_createVNode(_component_CAccordionHeader, null, {\n                  default: _withCtx(() => [_createTextVNode(\" Accordion Item #2 \")]),\n                  _: 1 /* STABLE */\n                }), _createVNode(_component_CAccordionBody, null, {\n                  default: _withCtx(() => [_hoisted_14, _createTextVNode(\" It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \"), _hoisted_15, _createTextVNode(\", though the transition does limit overflow. \")]),\n                  _: 1 /* STABLE */\n                })]),\n\n                _: 1 /* STABLE */\n              }), _createVNode(_component_CAccordionItem, null, {\n                default: _withCtx(() => [_createVNode(_component_CAccordionHeader, null, {\n                  default: _withCtx(() => [_createTextVNode(\" Accordion Item #3 \")]),\n                  _: 1 /* STABLE */\n                }), _createVNode(_component_CAccordionBody, null, {\n                  default: _withCtx(() => [_hoisted_16, _createTextVNode(\" It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \"), _hoisted_17, _createTextVNode(\", though the transition does limit overflow. \")]),\n                  _: 1 /* STABLE */\n                })]),\n\n                _: 1 /* STABLE */\n              })]),\n\n              _: 1 /* STABLE */\n            })]),\n\n            _: 1 /* STABLE */\n          })]),\n\n          _: 1 /* STABLE */\n        })]),\n\n        _: 1 /* STABLE */\n      }), _createVNode(_component_CCard, {\n        class: \"mb-4\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_CCardHeader, null, {\n          default: _withCtx(() => [_hoisted_18, _createTextVNode(), _hoisted_19]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_CCardBody, null, {\n          default: _withCtx(() => [_hoisted_20, _createVNode(_component_DocsExample, {\n            href: \"components/accordion.html#always-open\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_CAccordion, {\n              \"active-item-key\": 2,\n              \"always-open\": \"\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_CAccordionItem, {\n                \"item-key\": 1\n              }, {\n                default: _withCtx(() => [_createVNode(_component_CAccordionHeader, null, {\n                  default: _withCtx(() => [_createTextVNode(\" Accordion Item #1 \")]),\n                  _: 1 /* STABLE */\n                }), _createVNode(_component_CAccordionBody, null, {\n                  default: _withCtx(() => [_hoisted_21, _createTextVNode(\" It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \"), _hoisted_22, _createTextVNode(\", though the transition does limit overflow. \")]),\n                  _: 1 /* STABLE */\n                })]),\n\n                _: 1 /* STABLE */\n              }), _createVNode(_component_CAccordionItem, {\n                \"item-key\": 2\n              }, {\n                default: _withCtx(() => [_createVNode(_component_CAccordionHeader, null, {\n                  default: _withCtx(() => [_createTextVNode(\" Accordion Item #2 \")]),\n                  _: 1 /* STABLE */\n                }), _createVNode(_component_CAccordionBody, null, {\n                  default: _withCtx(() => [_hoisted_23, _createTextVNode(\" It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \"), _hoisted_24, _createTextVNode(\", though the transition does limit overflow. \")]),\n                  _: 1 /* STABLE */\n                })]),\n\n                _: 1 /* STABLE */\n              }), _createVNode(_component_CAccordionItem, {\n                \"item-key\": 3\n              }, {\n                default: _withCtx(() => [_createVNode(_component_CAccordionHeader, null, {\n                  default: _withCtx(() => [_createTextVNode(\" Accordion Item #3 \")]),\n                  _: 1 /* STABLE */\n                }), _createVNode(_component_CAccordionBody, null, {\n                  default: _withCtx(() => [_hoisted_25, _createTextVNode(\" It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \"), _hoisted_26, _createTextVNode(\", though the transition does limit overflow. \")]),\n                  _: 1 /* STABLE */\n                })]),\n\n                _: 1 /* STABLE */\n              })]),\n\n              _: 1 /* STABLE */\n            })]),\n\n            _: 1 /* STABLE */\n          })]),\n\n          _: 1 /* STABLE */\n        })]),\n\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createElementVNode","class","_createBlock","_component_CRow","_createVNode","_component_CCol","xs","_component_CCard","_component_CCardHeader","_hoisted_1","_component_CCardBody","_hoisted_2","_component_DocsExample","href","_component_CAccordion","_component_CAccordionItem","_component_CAccordionHeader","_component_CAccordionBody","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","flush","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26"],"sources":["C:\\Pratibha\\Ticket-Management-Frontend\\Ticket-Management-Frontend\\src\\views\\base\\Accordion.vue"],"sourcesContent":["<template>\n  <CRow>\n    <CCol :xs=\"12\">\n      <CCard class=\"mb-4\">\n        <CCardHeader>\n          <strong>Vue Accordion</strong>\n        </CCardHeader>\n        <CCardBody>\n          <p class=\"text-medium-emphasis small\">\n            Click the accordions below to expand/collapse the accordion content.\n          </p>\n          <DocsExample href=\"components/accordion.html\">\n            <CAccordion>\n              <CAccordionItem :item-key=\"1\">\n                <CAccordionHeader> Accordion Item #1 </CAccordionHeader>\n                <CAccordionBody>\n                  <strong>This is the first item's accordion body.</strong> It\n                  is hidden by default, until the collapse plugin adds the\n                  appropriate classes that we use to style each element. These\n                  classes control the overall appearance, as well as the showing\n                  and hiding via CSS transitions. You can modify any of this\n                  with custom CSS or overriding our default variables. It's also\n                  worth noting that just about any HTML can go within the\n                  <code>.accordion-body</code>, though the transition does limit\n                  overflow.\n                </CAccordionBody>\n              </CAccordionItem>\n              <CAccordionItem :item-key=\"2\">\n                <CAccordionHeader> Accordion Item #2 </CAccordionHeader>\n                <CAccordionBody>\n                  <strong>This is the second item's accordion body.</strong> It\n                  is hidden by default, until the collapse plugin adds the\n                  appropriate classes that we use to style each element. These\n                  classes control the overall appearance, as well as the showing\n                  and hiding via CSS transitions. You can modify any of this\n                  with custom CSS or overriding our default variables. It's also\n                  worth noting that just about any HTML can go within the\n                  <code>.accordion-body</code>, though the transition does limit\n                  overflow.\n                </CAccordionBody>\n              </CAccordionItem>\n              <CAccordionItem :item-key=\"3\">\n                <CAccordionHeader> Accordion Item #3 </CAccordionHeader>\n                <CAccordionBody>\n                  <strong>This is the third item's accordion body.</strong> It\n                  is hidden by default, until the collapse plugin adds the\n                  appropriate classes that we use to style each element. These\n                  classes control the overall appearance, as well as the showing\n                  and hiding via CSS transitions. You can modify any of this\n                  with custom CSS or overriding our default variables. It's also\n                  worth noting that just about any HTML can go within the\n                  <code>.accordion-body</code>, though the transition does limit\n                  overflow.\n                </CAccordionBody>\n              </CAccordionItem>\n            </CAccordion>\n          </DocsExample>\n        </CCardBody>\n      </CCard>\n      <CCard class=\"mb-4\">\n        <CCardHeader>\n          <strong>Vue Accordion</strong> <small>Flush</small>\n        </CCardHeader>\n        <CCardBody>\n          <p class=\"text-medium-emphasis small\">\n            Add <code>flush</code> to remove the default\n            <code>background-color</code>, some borders, and some rounded\n            corners to render accordions edge-to-edge with their parent\n            container.\n          </p>\n          <DocsExample href=\"components/accordion.html#flush\">\n            <CAccordion flush>\n              <CAccordionItem>\n                <CAccordionHeader> Accordion Item #1 </CAccordionHeader>\n                <CAccordionBody>\n                  <strong>This is the first item's accordion body.</strong> It\n                  is hidden by default, until the collapse plugin adds the\n                  appropriate classes that we use to style each element. These\n                  classes control the overall appearance, as well as the showing\n                  and hiding via CSS transitions. You can modify any of this\n                  with custom CSS or overriding our default variables. It's also\n                  worth noting that just about any HTML can go within the\n                  <code>.accordion-body</code>, though the transition does limit\n                  overflow.\n                </CAccordionBody>\n              </CAccordionItem>\n              <CAccordionItem>\n                <CAccordionHeader> Accordion Item #2 </CAccordionHeader>\n                <CAccordionBody>\n                  <strong>This is the second item's accordion body.</strong> It\n                  is hidden by default, until the collapse plugin adds the\n                  appropriate classes that we use to style each element. These\n                  classes control the overall appearance, as well as the showing\n                  and hiding via CSS transitions. You can modify any of this\n                  with custom CSS or overriding our default variables. It's also\n                  worth noting that just about any HTML can go within the\n                  <code>.accordion-body</code>, though the transition does limit\n                  overflow.\n                </CAccordionBody>\n              </CAccordionItem>\n              <CAccordionItem>\n                <CAccordionHeader> Accordion Item #3 </CAccordionHeader>\n                <CAccordionBody>\n                  <strong>This is the third item's accordion body.</strong> It\n                  is hidden by default, until the collapse plugin adds the\n                  appropriate classes that we use to style each element. These\n                  classes control the overall appearance, as well as the showing\n                  and hiding via CSS transitions. You can modify any of this\n                  with custom CSS or overriding our default variables. It's also\n                  worth noting that just about any HTML can go within the\n                  <code>.accordion-body</code>, though the transition does limit\n                  overflow.\n                </CAccordionBody>\n              </CAccordionItem>\n            </CAccordion>\n          </DocsExample>\n        </CCardBody>\n      </CCard>\n      <CCard class=\"mb-4\">\n        <CCardHeader>\n          <strong>Vue Accordion</strong> <small>Always open</small>\n        </CCardHeader>\n        <CCardBody>\n          <p class=\"text-medium-emphasis small\">\n            Add <code>always-open</code> property to make accordion items stay\n            open when another item is opened.\n          </p>\n          <DocsExample href=\"components/accordion.html#always-open\">\n            <CAccordion :active-item-key=\"2\" always-open>\n              <CAccordionItem :item-key=\"1\">\n                <CAccordionHeader> Accordion Item #1 </CAccordionHeader>\n                <CAccordionBody>\n                  <strong>This is the first item's accordion body.</strong> It\n                  is hidden by default, until the collapse plugin adds the\n                  appropriate classes that we use to style each element. These\n                  classes control the overall appearance, as well as the showing\n                  and hiding via CSS transitions. You can modify any of this\n                  with custom CSS or overriding our default variables. It's also\n                  worth noting that just about any HTML can go within the\n                  <code>.accordion-body</code>, though the transition does limit\n                  overflow.\n                </CAccordionBody>\n              </CAccordionItem>\n              <CAccordionItem :item-key=\"2\">\n                <CAccordionHeader> Accordion Item #2 </CAccordionHeader>\n                <CAccordionBody>\n                  <strong>This is the second item's accordion body.</strong> It\n                  is hidden by default, until the collapse plugin adds the\n                  appropriate classes that we use to style each element. These\n                  classes control the overall appearance, as well as the showing\n                  and hiding via CSS transitions. You can modify any of this\n                  with custom CSS or overriding our default variables. It's also\n                  worth noting that just about any HTML can go within the\n                  <code>.accordion-body</code>, though the transition does limit\n                  overflow.\n                </CAccordionBody>\n              </CAccordionItem>\n              <CAccordionItem :item-key=\"3\">\n                <CAccordionHeader> Accordion Item #3 </CAccordionHeader>\n                <CAccordionBody>\n                  <strong>This is the third item's accordion body.</strong> It\n                  is hidden by default, until the collapse plugin adds the\n                  appropriate classes that we use to style each element. These\n                  classes control the overall appearance, as well as the showing\n                  and hiding via CSS transitions. You can modify any of this\n                  with custom CSS or overriding our default variables. It's also\n                  worth noting that just about any HTML can go within the\n                  <code>.accordion-body</code>, though the transition does limit\n                  overflow.\n                </CAccordionBody>\n              </CAccordionItem>\n            </CAccordion>\n          </DocsExample>\n        </CCardBody>\n      </CCard>\n    </CCol>\n  </CRow>\n</template>\n\n<script>\nimport { ref } from 'vue'\nexport default {\n  name: 'Accordion',\n  setup() {\n    const activeKey = ref(1)\n    const flushActiveKey = ref(1)\n\n    return {\n      activeKey,\n      flushActiveKey,\n    }\n  },\n}\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}