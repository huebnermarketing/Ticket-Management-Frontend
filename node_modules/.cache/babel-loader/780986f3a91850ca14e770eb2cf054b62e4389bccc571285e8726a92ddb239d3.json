{"ast":null,"code":"export default {\n  name: 'Range'\n};","map":{"version":3,"names":["name"],"sources":["C:\\Pratibha\\Ticket-Management-Frontend\\Ticket-Management-Frontend\\src\\views\\forms\\Range.vue"],"sourcesContent":["<template>\n  <CRow>\n    <CCol :xs=\"12\">\n      <CCard class=\"mb-4\">\n        <CCardHeader> <strong>Vue Range</strong> <small></small> </CCardHeader>\n        <CCardBody>\n          <p class=\"text-medium-emphasis small\">\n            Create custom\n            <code>&lt;input type=&#34;range&#34;&gt;</code> controls with\n            <code>&lt;CFormRange&gt;</code>.\n          </p>\n          <DocsExample href=\"forms/range.html\">\n            <CFormLabel for=\"customRange1\">Example range</CFormLabel>\n            <CFormRange id=\"customRange1\" />\n          </DocsExample>\n        </CCardBody>\n      </CCard>\n    </CCol>\n    <CCol :xs=\"12\">\n      <CCard class=\"mb-4\">\n        <CCardHeader>\n          <strong>Vue Range</strong> <small>Disabled</small>\n        </CCardHeader>\n        <CCardBody>\n          <p class=\"text-medium-emphasis small\">\n            Add the <code>disabled</code> boolean attribute on an input to give\n            it a grayed out appearance and remove pointer events.\n          </p>\n          <DocsExample href=\"forms/range.html#disabled\">\n            <CFormLabel for=\"disabledRange\">Disabled range</CFormLabel>\n            <CFormRange id=\"disabledRange\" disabled />\n          </DocsExample>\n        </CCardBody>\n      </CCard>\n    </CCol>\n    <CCol :xs=\"12\">\n      <CCard class=\"mb-4\">\n        <CCardHeader>\n          <strong>Vue Range</strong> <small>Min and max</small>\n        </CCardHeader>\n        <CCardBody>\n          <p class=\"text-medium-emphasis small\">\n            Range inputs have implicit values for <code>min</code> and\n            <code>max</code>â€” <code>0</code> and <code>100</code>, respectively.\n            You may specify new values for those using the <code>min</code> and\n            <code>max</code> attributes.\n          </p>\n          <DocsExample href=\"forms/range.html#min-and-max\">\n            <CFormLabel for=\"customRange2\">Example range</CFormLabel>\n            <CFormRange id=\"customRange2\" :min=\"0\" :max=\"5\" value=\"3\" />\n          </DocsExample>\n        </CCardBody>\n      </CCard>\n    </CCol>\n    <CCol :xs=\"12\">\n      <CCard class=\"mb-4\">\n        <CCardHeader>\n          <strong>Vue Range</strong> <small>Steps</small>\n        </CCardHeader>\n        <CCardBody>\n          <p class=\"text-medium-emphasis small\">\n            By default, range inputs &#34;snap&#34; to integer values. To change\n            this, you can specify a <code>step</code> value. In the example\n            below, we double the number of steps by using\n            <code>step=&#34;0.5&#34;</code>.\n          </p>\n          <DocsExample href=\"forms/range.html#steps\">\n            <CFormLabel for=\"customRange3\">Example range</CFormLabel>\n            <CFormRange\n              id=\"customRange3\"\n              :min=\"0\"\n              :max=\"5\"\n              :step=\"0.5\"\n              value=\"3\"\n            />\n          </DocsExample>\n        </CCardBody>\n      </CCard>\n    </CCol>\n  </CRow>\n</template>\n\n<script>\nexport default {\n  name: 'Range',\n}\n</script>\n"],"mappings":"AAmFA,eAAe;EACbA,IAAI,EAAE;AACR"},"metadata":{},"sourceType":"module","externalDependencies":[]}