{"ast":null,"code":"export default {\n  name: 'Alerts',\n  methods: {\n    alert: function () {\n      alert('ðŸ‘‹ Well, hi there! Thanks for dismissing me.');\n    }\n  }\n};","map":{"version":3,"names":["name","methods","alert"],"sources":["C:\\Pratibha\\Ticket-Management-Frontend\\Ticket-Management-Frontend\\src\\views\\notifications\\Alerts.vue"],"sourcesContent":["<template>\n  <CRow>\n    <CCol :xs=\"12\">\n      <CCard class=\"mb-4\">\n        <CCardHeader>\n          <strong>Vue Alert</strong>\n        </CCardHeader>\n        <CCardBody>\n          <p class=\"text-medium-emphasis small\">\n            Vue Alert is prepared for any length of text, as well as an optional\n            close button. For a styling, use one of the\n            <strong>required</strong> contextual <code>color</code> props (e.g.,\n            <code>primary</code>). For inline dismissal, use the\n            <a\n              href=\"https://coreui.io/vue/docs/4.0/components/alert.html#dismissing\"\n            >\n              dismissing prop\n            </a>\n            .\n          </p>\n          <DocsExample href=\"components/alert.html\">\n            <CAlert color=\"primary\"\n              >A simple primary alertâ€”check it out!</CAlert\n            >\n            <CAlert color=\"secondary\"\n              >A simple secondary alertâ€”check it out!</CAlert\n            >\n            <CAlert color=\"success\"\n              >A simple success alertâ€”check it out!</CAlert\n            >\n            <CAlert color=\"danger\">A simple danger alertâ€”check it out!</CAlert>\n            <CAlert color=\"warning\"\n              >A simple warning alertâ€”check it out!</CAlert\n            >\n            <CAlert color=\"info\">A simple info alertâ€”check it out!</CAlert>\n            <CAlert color=\"light\">A simple light alertâ€”check it out!</CAlert>\n            <CAlert color=\"dark\">A simple dark alertâ€”check it out!</CAlert>\n          </DocsExample>\n        </CCardBody>\n      </CCard>\n    </CCol>\n    <CCol :xs=\"12\">\n      <CCard class=\"mb-4\">\n        <CCardHeader>\n          <strong>Vue Alert</strong> <small>Link color</small>\n        </CCardHeader>\n        <CCardBody>\n          <p class=\"text-medium-emphasis small\">\n            Use the <code>&lt;CAlertLink&gt;</code> component to immediately\n            give matching colored links inside any alert.\n          </p>\n          <DocsExample href=\"components/alert.html#link-color\">\n            <CAlert color=\"primary\">\n              A simple primary alert with\n              <CAlertLink href=\"#\">an example link</CAlertLink>. Give it a click\n              if you like.\n            </CAlert>\n            <CAlert color=\"secondary\">\n              A simple secondary alert with\n              <CAlertLink href=\"#\">an example link</CAlertLink>. Give it a click\n              if you like.\n            </CAlert>\n            <CAlert color=\"success\">\n              A simple success alert with\n              <CAlertLink href=\"#\">an example link</CAlertLink>. Give it a click\n              if you like.\n            </CAlert>\n            <CAlert color=\"danger\">\n              A simple danger alert with\n              <CAlertLink href=\"#\">an example link</CAlertLink>. Give it a click\n              if you like.\n            </CAlert>\n            <CAlert color=\"warning\">\n              A simple warning alert with\n              <CAlertLink href=\"#\">an example link</CAlertLink>. Give it a click\n              if you like.\n            </CAlert>\n            <CAlert color=\"info\">\n              A simple info alert with\n              <CAlertLink href=\"#\">an example link</CAlertLink>. Give it a click\n              if you like.\n            </CAlert>\n            <CAlert color=\"light\">\n              A simple light alert with\n              <CAlertLink href=\"#\">an example link</CAlertLink>. Give it a click\n              if you like.\n            </CAlert>\n            <CAlert color=\"dark\">\n              A simple dark alert with\n              <CAlertLink href=\"#\">an example link</CAlertLink>. Give it a click\n              if you like.\n            </CAlert>\n          </DocsExample>\n        </CCardBody>\n      </CCard>\n    </CCol>\n    <CCol :xs=\"12\">\n      <CCard class=\"mb-4\">\n        <CCardHeader>\n          <strong>Vue Alert</strong> <small>Additional content</small>\n        </CCardHeader>\n        <CCardBody>\n          <p class=\"text-medium-emphasis small\">\n            Alert can also incorporate supplementary components &amp; elements\n            like heading, paragraph, and divider.\n          </p>\n          <DocsExample href=\"components/alert.html#additional-content\">\n            <CAlert color=\"success\">\n              <CAlertHeading tag=\"h4\">Well done!</CAlertHeading>\n              <p>\n                Aww yeah, you successfully read this important alert message.\n                This example text is going to run a bit longer so that you can\n                see how spacing within an alert works with this kind of content.\n              </p>\n              <hr />\n              <p class=\"mb-0\">\n                Whenever you need to, be sure to use margin utilities to keep\n                things nice and tidy.\n              </p>\n            </CAlert>\n          </DocsExample>\n        </CCardBody>\n      </CCard>\n    </CCol>\n    <CCol :xs=\"12\">\n      <CCard class=\"mb-4\">\n        <CCardHeader>\n          <strong>Vue Alert</strong> <small>Dismissing</small>\n        </CCardHeader>\n        <CCardBody>\n          <p class=\"text-medium-emphasis small\">\n            Alerts can also be easily dismissed. Just add the\n            <code>dismissible</code> prop.\n          </p>\n          <DocsExample href=\"components/alert.html#dismissing\">\n            <CAlert color=\"warning\" dismissible @dismiss=\"alert\">\n              <strong>Go right ahead</strong> and click that dimiss over there\n              on the right.\n            </CAlert>\n          </DocsExample>\n        </CCardBody>\n      </CCard>\n    </CCol>\n  </CRow>\n</template>\n\n<script>\nexport default {\n  name: 'Alerts',\n  methods: {\n    alert: function () {\n      alert('ðŸ‘‹ Well, hi there! Thanks for dismissing me.')\n    },\n  },\n}\n</script>\n"],"mappings":"AAmJA,eAAe;EACbA,IAAI,EAAE,QAAQ;EACdC,OAAO,EAAE;IACPC,KAAK,EAAE,SAAAA,CAAA,EAAY;MACjBA,KAAK,CAAC,8CAA8C;IACtD;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}