{"ast":null,"code":"import VueImg from '@/assets/images/vue.jpg';\nexport default {\n  name: 'Placeholders',\n  setup() {\n    return {\n      VueImg\n    };\n  }\n};","map":{"version":3,"names":["VueImg","name","setup"],"sources":["C:\\Pratibha\\Ticket-Management-Frontend\\Ticket-Management-Frontend\\src\\views\\base\\Placeholders.vue"],"sourcesContent":["<template>\n  <CRow>\n    <CCol :xs=\"12\">\n      <CCard class=\"mb-4\">\n        <CCardHeader>\n          <strong>Vue Placeholder</strong>\n        </CCardHeader>\n        <CCardBody>\n          <p class=\"text-medium-emphasis small\">\n            In the example below, we take a typical card component and recreate\n            it with placeholders applied to create a \"loading card\". Size and\n            proportions are the same between the two.\n          </p>\n          <DocsExample href=\"components/placeholder.html\">\n            <div class=\"d-flex justify-content-around\">\n              <CCard style=\"width: 18rem\">\n                <CCardImage orientation=\"top\" :src=\"VueImg\" />\n                <CCardBody>\n                  <CCardTitle>Card title</CCardTitle>\n                  <CCardText>\n                    Some quick example text to build on the card title and make\n                    up the bulk of the card's content.\n                  </CCardText>\n                  <CButton color=\"primary\" href=\"#\">Go somewhere</CButton>\n                </CCardBody>\n              </CCard>\n              <CCard style=\"width: 18rem\">\n                <CCardImage\n                  component=\"svg\"\n                  orientation=\"top\"\n                  width=\"100%\"\n                  height=\"162\"\n                  role=\"img\"\n                  aria-label=\"Placeholder\"\n                  preserveAspectRatio=\"xMidYMid slice\"\n                  focusable=\"false\"\n                >\n                  <title>Placeholder</title\n                  ><rect width=\"100%\" height=\"100%\" fill=\"#868e96\"></rect>\n                </CCardImage>\n                <CCardBody>\n                  <CCardTitle v-c-placeholder=\"{ animation: 'glow', xs: 7 }\">\n                    <CPlaceholder :xs=\"6\" />\n                  </CCardTitle>\n                  <CCardText v-c-placeholder=\"{ animation: 'glow' }\">\n                    <CPlaceholder :xs=\"7\" />\n                    <CPlaceholder :xs=\"4\" />\n                    <CPlaceholder :xs=\"4\" />\n                    <CPlaceholder :xs=\"6\" />\n                    <CPlaceholder :xs=\"8\" />\n                  </CCardText>\n                  <CButton\n                    v-c-placeholder=\"{ xs: 6 }\"\n                    color=\"primary\"\n                    aria-hidden=\"true\"\n                    disabled\n                    href=\"#\"\n                    tabindex=\"-1\"\n                  ></CButton>\n                </CCardBody>\n              </CCard>\n            </div>\n          </DocsExample>\n        </CCardBody>\n      </CCard>\n      <CCard class=\"mb-4\">\n        <CCardHeader>\n          <strong>Vue Placeholder</strong>\n        </CCardHeader>\n        <CCardBody>\n          <p>\n            Create placeholders with the\n            <code>&lt;CPlaceholder&gt;</code> component and a grid column propx\n            (e.g., <code>:xs=\"6\"</code>) to set the <code>width</code>. They can\n            replace the text inside an element or be added as a modifier class\n            to an existing component.\n          </p>\n          <DocsExample href=\"components/placeholder.html\">\n            <p aria-hidden=\"true\">\n              <CPlaceholder :xs=\"6\" />\n            </p>\n            <CButton\n              v-c-placeholder=\"{ xs: 4 }\"\n              color=\"primary\"\n              aria-hidden=\"true\"\n              disabled\n              href=\"#\"\n              tabindex=\"-1\"\n            ></CButton>\n          </DocsExample>\n        </CCardBody>\n      </CCard>\n      <CCard class=\"mb-4\">\n        <CCardHeader>\n          <strong>Vue Placeholder</strong> <small> Width</small>\n        </CCardHeader>\n        <CCardBody>\n          <p>\n            You can change the <code>width</code> through grid column classes,\n            width utilities, or inline styles.\n          </p>\n          <DocsExample href=\"components/placeholder.html#width\">\n            <CPlaceholder :xs=\"6\" />\n            <CPlaceholder class=\"w-75\" />\n            <CPlaceholder style=\"width: 30%\" />\n          </DocsExample>\n        </CCardBody>\n      </CCard>\n      <CCard class=\"mb-4\">\n        <CCardHeader>\n          <strong>Vue Placeholder</strong> <small> Color</small>\n        </CCardHeader>\n        <CCardBody>\n          <p>\n            By default, the <code>&lt;CPlaceholder&gt;</code> uses\n            <code>currentColor</code>. This can be overridden with a custom\n            color or utility class.\n          </p>\n          <DocsExample href=\"components/placeholder.html#color\">\n            <CPlaceholder :xs=\"12\" />\n\n            <CPlaceholder color=\"primary\" :xs=\"12\" />\n            <CPlaceholder color=\"secondary\" :xs=\"12\" />\n            <CPlaceholder color=\"success\" :xs=\"12\" />\n            <CPlaceholder color=\"danger\" :xs=\"12\" />\n            <CPlaceholder color=\"warning\" :xs=\"12\" />\n            <CPlaceholder color=\"info\" :xs=\"12\" />\n            <CPlaceholder color=\"light\" :xs=\"12\" />\n            <CPlaceholder color=\"dark\" :xs=\"12\" />\n          </DocsExample>\n        </CCardBody>\n      </CCard>\n      <CCard class=\"mb-4\">\n        <CCardHeader>\n          <strong>Vue Placeholder</strong> <small> Sizing</small>\n        </CCardHeader>\n        <CCardBody>\n          <p>\n            The size of <code>&lt;CPlaceholder&gt;</code>s are based on the\n            typographic style of the parent element. Customize them with\n            <code>size</code> prop: <code>lg</code>, <code>sm</code>, or\n            <code>xs</code>.\n          </p>\n          <DocsExample href=\"components/placeholder.html#color\">\n            <CPlaceholder :xs=\"12\" size=\"lg\" />\n            <CPlaceholder :xs=\"12\" />\n            <CPlaceholder :xs=\"12\" size=\"sm\" />\n            <CPlaceholder :xs=\"12\" size=\"xs\" />\n          </DocsExample>\n        </CCardBody>\n      </CCard>\n      <CCard class=\"mb-4\">\n        <CCardHeader>\n          <strong>Vue Placeholder</strong> <small> Animation</small>\n        </CCardHeader>\n        <CCardBody>\n          <p>\n            Animate placeholders with <code>animation=\"glow\"</code> or\n            <code>animation=\"wave\"</code> to better convey the perception of\n            something being <em>actively</em> loaded.\n          </p>\n          <DocsExample href=\"components/placeholder.html#animation\">\n            <CPlaceholder component=\"p\" animation=\"glow\">\n              <CPlaceholder :xs=\"12\" />\n            </CPlaceholder>\n\n            <CPlaceholder component=\"p\" animation=\"wave\">\n              <CPlaceholder :xs=\"12\" />\n            </CPlaceholder>\n          </DocsExample>\n        </CCardBody>\n      </CCard>\n    </CCol>\n  </CRow>\n</template>\n\n<script>\nimport VueImg from '@/assets/images/vue.jpg'\nexport default {\n  name: 'Placeholders',\n  setup() {\n    return {\n      VueImg,\n    }\n  },\n}\n</script>\n"],"mappings":"AAiLA,OAAOA,MAAK,MAAO,yBAAwB;AAC3C,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,KAAKA,CAAA,EAAG;IACN,OAAO;MACLF;IACF;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}