{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_CBreadcrumbItem = _resolveComponent(\"CBreadcrumbItem\");\n  const _component_CBreadcrumb = _resolveComponent(\"CBreadcrumb\");\n  return _openBlock(), _createBlock(_component_CBreadcrumb, {\n    class: \"d-md-down-none me-auto mb-0\"\n  }, {\n    default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.breadcrumbs, item => {\n      return _openBlock(), _createBlock(_component_CBreadcrumbItem, {\n        key: item,\n        href: item.active ? '' : item.path,\n        active: item.active\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(item.name), 1 /* TEXT */)]),\n\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"href\", \"active\"]);\n    }), 128 /* KEYED_FRAGMENT */))]),\n\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createBlock","_component_CBreadcrumb","class","_createElementBlock","_Fragment","_renderList","$setup","breadcrumbs","item","_component_CBreadcrumbItem","key","href","active","path","name"],"sources":["C:\\Pratibha\\Ticket-Management-Frontend\\Ticket-Management-Frontend\\src\\components\\AppBreadcrumb.vue"],"sourcesContent":["<template>\n  <CBreadcrumb class=\"d-md-down-none me-auto mb-0\">\n    <CBreadcrumbItem\n      v-for=\"item in breadcrumbs\"\n      :key=\"item\"\n      :href=\"item.active ? '' : item.path\"\n      :active=\"item.active\"\n    >\n      {{ item.name }}\n    </CBreadcrumbItem>\n  </CBreadcrumb>\n</template>\n\n<script>\nimport { onMounted, ref } from 'vue'\nimport router from '@/router'\n\nexport default {\n  name: 'AppBreadcrumb',\n  setup() {\n    const breadcrumbs = ref()\n\n    const getBreadcrumbs = () => {\n      return router.currentRoute.value.matched.map((route) => {\n        return {\n          active: route.path === router.currentRoute.value.fullPath,\n          name: route.name,\n          path: `${router.options.history.base}${route.path}`,\n        }\n      })\n    }\n\n    router.afterEach(() => {\n      breadcrumbs.value = getBreadcrumbs()\n    })\n\n    onMounted(() => {\n      breadcrumbs.value = getBreadcrumbs()\n    })\n\n    return {\n      breadcrumbs,\n    }\n  },\n}\n</script>\n"],"mappings":";;;;uBACEA,YAAA,CAScC,sBAAA;IATDC,KAAK,EAAC;EAA6B;sBAE5C,MAA2B,E,kBAD7BC,mBAAA,CAOkBC,SAAA,QAAAC,WAAA,CANDC,MAAA,CAAAC,WAAW,EAAnBC,IAAI;2BADbR,YAAA,CAOkBS,0BAAA;QALfC,GAAG,EAAEF,IAAI;QACTG,IAAI,EAAEH,IAAI,CAACI,MAAM,QAAQJ,IAAI,CAACK,IAAI;QAClCD,MAAM,EAAEJ,IAAI,CAACI;;0BAEd,MAAe,C,kCAAZJ,IAAI,CAACM,IAAI,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}