{"ast":null,"code":"export default {\n  name: 'Paginations'\n};","map":{"version":3,"names":["name"],"sources":["C:\\Pratibha\\Ticket-Management-Frontend\\Ticket-Management-Frontend\\src\\views\\base\\Paginations.vue"],"sourcesContent":["<template>\n  <CRow>\n    <CCol :xs=\"12\">\n      <CCard class=\"mb-4\">\n        <CCardHeader>\n          <strong>Vue Pagination</strong>\n        </CCardHeader>\n        <CCardBody>\n          <p class=\"text-medium-emphasis small\">\n            We use a large block of connected links for our pagination, making\n            links hard to miss and easily scalableâ€”all while providing large hit\n            areas. Pagination is built with list HTML elements so screen readers\n            can announce the number of available links. Use a wrapping\n            <code>&lt;nav&gt;</code> element to identify it as a navigation\n            section to screen readers and other assistive technologies.\n          </p>\n          <p class=\"text-medium-emphasis small\">\n            In addition, as pages likely have more than one such navigation\n            section, it&#39;s advisable to provide a descriptive\n            <code>aria-label</code> for the <code>&lt;nav&gt;</code> to reflect\n            its purpose. For example, if the pagination component is used to\n            navigate between a set of search results, an appropriate label could\n            be <code>aria-label=&#34;Search results pages&#34;</code>.\n          </p>\n          <DocsExample href=\"components/pagination.html\">\n            <CPagination aria-label=\"Page navigation example\">\n              <CPaginationItem>Previous</CPaginationItem>\n              <CPaginationItem>1</CPaginationItem>\n              <CPaginationItem>2</CPaginationItem>\n              <CPaginationItem>3</CPaginationItem>\n              <CPaginationItem>Next</CPaginationItem>\n            </CPagination>\n          </DocsExample>\n        </CCardBody>\n      </CCard>\n    </CCol>\n    <CCol :xs=\"12\">\n      <CCard class=\"mb-4\">\n        <CCardHeader>\n          <strong>Vue Pagination</strong> <small>Working with icons</small>\n        </CCardHeader>\n        <CCardBody>\n          <p class=\"text-medium-emphasis small\">\n            Looking to use an icon or symbol in place of text for some\n            pagination links? Be sure to provide proper screen reader support\n            with <code>aria</code> attributes.\n          </p>\n          <DocsExample href=\"components/pagination.html#working-with-icons\">\n            <CPagination aria-label=\"Page navigation example\">\n              <CPaginationItem aria-label=\"Previous\">\n                <span aria-hidden=\"true\">&laquo;</span>\n              </CPaginationItem>\n              <CPaginationItem>1</CPaginationItem>\n              <CPaginationItem>2</CPaginationItem>\n              <CPaginationItem>3</CPaginationItem>\n              <CPaginationItem aria-label=\"Next\">\n                <span aria-hidden=\"true\">&raquo;</span>\n              </CPaginationItem>\n            </CPagination>\n          </DocsExample>\n        </CCardBody>\n      </CCard>\n    </CCol>\n    <CCol :xs=\"12\">\n      <CCard class=\"mb-4\">\n        <CCardHeader>\n          <strong>Vue Pagination</strong>\n          <small>Disabled and active states</small>\n        </CCardHeader>\n        <CCardBody>\n          <p class=\"text-medium-emphasis small\">\n            Pagination links are customizable for different circumstances. Use\n            <code>disabled</code> for links that appear un-clickable and\n            <code>.active</code> to indicate the current page.\n          </p>\n          <p class=\"text-medium-emphasis small\">\n            While the <code>disabled</code> prop uses\n            <code>pointer-events: none</code> to <em>try</em> to disable the\n            link functionality of <code>&lt;a&gt;</code>s, that CSS property is\n            not yet standardized and doesn&#39;taccount for keyboard navigation.\n            As such, we always add <code>tabindex=&#34;-1&#34;</code> on\n            disabled links and use custom JavaScript to fully disable their\n            functionality.\n          </p>\n          <DocsExample\n            href=\"components/pagination.html#disabled-and-active-states\"\n          >\n            <CPagination aria-label=\"Page navigation example\">\n              <CPaginationItem aria-label=\"Previous\" disabled>\n                <span aria-hidden=\"true\">&laquo;</span>\n              </CPaginationItem>\n              <CPaginationItem active>1</CPaginationItem>\n              <CPaginationItem>2</CPaginationItem>\n              <CPaginationItem>3</CPaginationItem>\n              <CPaginationItem aria-label=\"Next\">\n                <span aria-hidden=\"true\">&raquo;</span>\n              </CPaginationItem>\n            </CPagination>\n          </DocsExample>\n        </CCardBody>\n      </CCard>\n    </CCol>\n    <CCol :xs=\"12\">\n      <CCard class=\"mb-4\">\n        <CCardHeader>\n          <strong>Vue Pagination</strong> <small>Sizing</small>\n        </CCardHeader>\n        <CCardBody>\n          <p class=\"text-medium-emphasis small\">\n            Fancy larger or smaller pagination? Add\n            <code>size=&#34;lg&#34;</code> or <code>size=&#34;sm&#34;</code> for\n            additional sizes.\n          </p>\n          <DocsExample href=\"components/pagination.html#sizing\">\n            <CPagination size=\"lg\" aria-label=\"Page navigation example\">\n              <CPaginationItem>Previous</CPaginationItem>\n              <CPaginationItem>1</CPaginationItem>\n              <CPaginationItem>2</CPaginationItem>\n              <CPaginationItem>3</CPaginationItem>\n              <CPaginationItem>Next</CPaginationItem>\n            </CPagination>\n          </DocsExample>\n          <DocsExample href=\"components/pagination.html#sizing\">\n            <CPagination size=\"sm\" aria-label=\"Page navigation example\">\n              <CPaginationItem>Previous</CPaginationItem>\n              <CPaginationItem>1</CPaginationItem>\n              <CPaginationItem>2</CPaginationItem>\n              <CPaginationItem>3</CPaginationItem>\n              <CPaginationItem>Next</CPaginationItem>\n            </CPagination>\n          </DocsExample>\n        </CCardBody>\n      </CCard>\n    </CCol>\n    <CCol :xs=\"12\">\n      <CCard class=\"mb-4\">\n        <CCardHeader>\n          <strong>Vue Pagination</strong> <small>Alignment</small>\n        </CCardHeader>\n        <CCardBody>\n          <p class=\"text-medium-emphasis small\">\n            Change the alignment of pagination components with\n            <a href=\"https://coreui.io/docs/utilities/flex/\"\n              >flexbox utilities</a\n            >.\n          </p>\n          <DocsExample href=\"components/pagination.html#aligment\">\n            <CPagination\n              class=\"justify-content-center\"\n              aria-label=\"Page navigation example\"\n            >\n              <CPaginationItem disabled>Previous</CPaginationItem>\n              <CPaginationItem>1</CPaginationItem>\n              <CPaginationItem>2</CPaginationItem>\n              <CPaginationItem>3</CPaginationItem>\n              <CPaginationItem>Next</CPaginationItem>\n            </CPagination>\n          </DocsExample>\n          <DocsExample href=\"components/pagination.html#aligment\">\n            <CPagination\n              class=\"justify-content-end\"\n              aria-label=\"Page navigation example\"\n            >\n              <CPaginationItem disabled>Previous</CPaginationItem>\n              <CPaginationItem>1</CPaginationItem>\n              <CPaginationItem>2</CPaginationItem>\n              <CPaginationItem>3</CPaginationItem>\n              <CPaginationItem>Next</CPaginationItem>\n            </CPagination>\n          </DocsExample>\n        </CCardBody>\n      </CCard>\n    </CCol>\n  </CRow>\n</template>\n\n<script>\nexport default {\n  name: 'Paginations',\n}\n</script>\n"],"mappings":"AAiLA,eAAe;EACbA,IAAI,EAAE;AACR"},"metadata":{},"sourceType":"module","externalDependencies":[]}